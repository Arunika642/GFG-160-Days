class Solution {
  public:
    void nextPermutation(vector<int>& arr) {
        // code here
        int n = arr.size();
        int index1=-1;
        for(int i=n-2;i>=0;i--)
        {
            if(arr[i]<arr[i+1])
            {
                index1 = i;
                break;
            }
        }
        if(index1 == -1)
        {
            reverse(arr.begin(), arr.end()); // Rearrange to ascending order
            return;
        }
        int index2 = -1;
        for(int i=n-1; i>index1;i--)
        {
            if(arr[i] > arr[index1]) 
            {
                index2 = i;
                break;
            }
        }
        swap(arr[index1],arr[index2]);
        reverse(arr.begin() + index1+1, arr.end());
    }
};

// Time Complexity: O(n)Auxiliary Space: O(1)
